const express = require("express");

const app = express();

const usernamesRouter = require("./routes/usernamesRouter");

app.set("view engine", "ejs");

/* express.urlencoded() middlware handles form submissions, 
sets form's data to the req.body field 
extended is set to true to accept data other than a string or an array
(if a req is sent with a Content-Type other than "application/x-www-form-urlencoded",
Express won't parse the data, and req.body will be an empty object) */
app.use(express.urlencoded({ extended: true }));

// defines / route and registers usernamesRouter middleware
app.use("/", usernamesRouter);

/* tells  my server to listen for incoming requests on port 3000
use dynamic port for deployment 
this is the port used by my Express.js web server to listen for incoming requests */
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Express app listening on port ${PORT}!`));

/* Setting up a new db in PostgreSQL shell
- How do I create a db and table via PostgreSQL shell?
- identity column - id column is the identity column, automatically generated by 
                    PostgreSQL, starts at 1 and increments by 1 for each new row
                    PostgresQL implicity creates usernames_id_seq, a sequence object,
                    that keeps track of the next value to be used
- sequence object - special database object that generates unique numeric values,
                    for auto-incrementing columns
Setting up and query with node-postgres
- What is node-postgres and how do I use it?
node-postgres - library that I'll use to interface with the PostgreSQL db in my Express app
- When should I use a client or a pool in a pg?
client - individual connection to the DB, which I manually manage
         I open a connection, do my query, then close it
         for one-off queries
pool - pool of clients that holds onto connections 
       when I query, it programmatically opens a new connection unless there's an existing
       spare one, which is perfect for web servers
- How would I integrate db query functions in my Express app?
- initialize a pool, and use the query method, put this in a db/queries.js file
- 5432, PostgreSQL port, is used for database communication
- 3000 (or another value), is the Express.js port that is for serving HTTP requests
- my Express app communicates with PostgreSQL, but they do not share the same port
Using a script to populate the db 
- How would I populate the db via a script? */
